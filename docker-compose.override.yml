version: '3.4'

services:
  portainer:
    container_name: MeminToDo.Portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  seq:
    container_name: MeminToDo.Seq
    environment:
        - ACCEPT_EULA=Y
    ports:
        - "5341:80"
    networks:
      - MeminToDo.SeqNetwork
      
  elasticsearch:
    container_name: MeminToDo.ElasticSearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "8012:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - MeminToDo.ElasticNetwork

  kibana:
    container_name: MeminToDo.Kibana
    environment:
      - ELASTICSEARCH_URL=http://memintodo.elasticsearch:8012
    depends_on:
      - elasticsearch
    ports:
      - "8011:5601" 
    networks:
      - MeminToDo.ElasticNetwork

  consul:
    container_name: MeminToDo.Consul
    restart: always
    hostname: "localhost"
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    networks:
      - MeminToDo.ConsulNetwork
    command: ["consul", "agent", "-server", "-ui", "-bind", "172.23.0.2", "-client", "0.0.0.0", "-data-dir", "/consul/data", "-config-dir", "/consul/config", "-bootstrap", "-datacenter", "docker", ]
 
  jaeger:
    container_name: MeminToDo.Jaeger
    restart: always
    hostname: "localhost"
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "14268:14268"
      - "14250:14250"
      - "16686:16686"
      - "5778:5778"
    networks:
      - MeminToDo.JaegerNetwork

  prometheus:
    container_name: MeminToDo.Prometheus
    ports:
      - "30090:9090"
    environment:
      - TZ=UTC+3
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: MeminToDo.Grafana
    ports:
      - "30091:3000"
    volumes:
      - ./grafana-data/data:/var/lib/grafana 
    depends_on:
      - prometheus


  workout.api:
    container_name: MeminToDo.Workout.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ElasticConfiguration:Uri=http://memintodo.elasticsearch:8012"
      - "Seq:ServerUrl=http://MeminToDo.Seq:5341"
    ports:
      - "8001:80"
    networks:
      - MeminToDo.ConsulNetwork
      - MeminToDo.SeqNetwork
      - MeminToDo.ElasticNetwork
    depends_on:
      - kibana

  skill.api:
    container_name: MeminToDo.Skill.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Development   
      - MongoConnection:ConnectionString=
      - MongoConnection:Database=
      - "ElasticConfiguration:Uri=http://memintodo.elasticsearch:8012"
      - "Seq:ServerUrl=http://memintodo.seq:5341"
    ports:
      - "8002:80"
    networks:
      - MeminToDo.ConsulNetwork
      - MeminToDo.SeqNetwork
      - MeminToDo.ElasticNetwork
    depends_on:
      - kibana

  entertainment.api:
    container_name: MeminToDo.Entertainment.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Development  
      - PostgreSql=
      - "ElasticConfiguration:Uri=http://memintodo.elasticsearch:8012"
      - "Seq:ServerUrl=http://memintodo.seq:5341"
    ports:
      - "8003:80"
    networks:
      - MeminToDo.ConsulNetwork
      - MeminToDo.SeqNetwork
      - MeminToDo.ElasticNetwork
    depends_on:
      - kibana

  healthcheck:
    container_name: MeminToDo.HealthCheck
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HealthChecksUI__HealthChecks__0__Name=Workout API Health Check
      - HealthChecksUI__HealthChecks__0__Uri=http://memintodo.workout.api/hc
      - HealthChecksUI__HealthChecks__1__Name=Skill API Health Check
      - HealthChecksUI__HealthChecks__1__Uri=http://memintodo.skill.api/hc
      - HealthChecksUI__HealthChecks__2__Name=Entertainment API Health Check
      - HealthChecksUI__HealthChecks__2__Uri=http://memintodo.entertainment.api/hc
      - WorkoutService__Url=http://memintodo.workout.api
      - WorkoutService__ServiceName=Workout Service
      - WorkoutService__ServiceId=Workout
      - SkillService__Url=http://memintodo.skill.api
      - SkillService__ServiceName=Skill Service
      - SkillService__ServiceId=Skill
      - EntertainmentService__Url=http://memintodo.entertainment.api
      - EntertainmentService__ServiceName=Entertainment Service
      - EntertainmentService__ServiceId=Entertainment
      - Consul__Host=http://172.23.0.2:8500
    ports:
      - "8010:80"
    depends_on:
      - consul
      - grafana
      - kibana
      - prometheus
      - jaeger
      - entertainment.api
      - skill.api
      - workout.api
    networks:
      - MeminToDo.ConsulNetwork
  
  #user.api:
  #  environment:
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - ASPNETCORE_URLS=https://+:443;http://+:80
  #  ports:
  #    - "80"
  #    - "443"
  #  volumes:
  #    - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
  #    - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro



  #log.api:
  #  environment:
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - ASPNETCORE_URLS=https://+:443;http://+:80
  #  ports:
  #    - "80"
  #    - "443"
  #  volumes:
  #    - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
  #    - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro


  #dashboard.api:
  #  environment:
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - ASPNETCORE_URLS=https://+:443;http://+:80
  #  ports:
  #    - "80"
  #    - "443"
  #  volumes:
  #    - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
  #    - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  #ocelotapigateway:
  #  environment:
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - ASPNETCORE_URLS=https://+:443;http://+:80
  #  ports:
  #    - "80"
  #    - "443"
  #  volumes:
  #    - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
  #    - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
  
volumes:
  portainer_data:
  elasticsearch-data:

networks:
  MeminToDo.SeqNetwork:
    driver: bridge
  MeminToDo.JaegerNetwork:
    driver: bridge
  MeminToDo.ConsulNetwork:
    driver: bridge
  MeminToDo.ElasticNetwork:
    driver: bridge