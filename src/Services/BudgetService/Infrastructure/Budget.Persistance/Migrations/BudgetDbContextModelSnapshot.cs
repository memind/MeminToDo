// <auto-generated />
using System;
using Budget.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Budget.Persistance.Migrations
{
    [DbContext(typeof(BudgetDbContext))]
    partial class BudgetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Budget.Domain.Entities.BudgetAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 15, 0, 44, 9, 583, DateTimeKind.Local).AddTicks(4828))
                        .HasColumnOrder(3);

                    b.Property<Guid>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AccountsUserId")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("BudgetAccountTable", (string)null);
                });

            modelBuilder.Entity("Budget.Domain.Entities.MoneyFlow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<Guid>("BudgetAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 15, 0, 44, 9, 583, DateTimeKind.Local).AddTicks(7749))
                        .HasColumnOrder(8);

                    b.Property<int>("Currency")
                        .HasColumnType("int")
                        .HasColumnName("Currency")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Description")
                        .HasColumnOrder(6);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("Message")
                        .HasColumnOrder(7);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<Guid>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BudgetsUser")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("BudgetAccountId");

                    b.ToTable("MoneyFlowTable", (string)null);
                });

            modelBuilder.Entity("Budget.Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("BudgetAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 15, 0, 44, 9, 583, DateTimeKind.Local).AddTicks(6360))
                        .HasColumnOrder(5);

                    b.Property<int>("Currency")
                        .HasColumnType("int")
                        .HasColumnName("Currency")
                        .HasColumnOrder(3);

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<string>("WalletName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("WalletName")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("BudgetAccountId");

                    b.ToTable("WalletTable", (string)null);
                });

            modelBuilder.Entity("Budget.Domain.Entities.MoneyFlow", b =>
                {
                    b.HasOne("Budget.Domain.Entities.BudgetAccount", "BudgetAccount")
                        .WithMany("MoneyFlows")
                        .HasForeignKey("BudgetAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BudgetAccount");
                });

            modelBuilder.Entity("Budget.Domain.Entities.Wallet", b =>
                {
                    b.HasOne("Budget.Domain.Entities.BudgetAccount", "BudgetAccount")
                        .WithMany("Wallets")
                        .HasForeignKey("BudgetAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BudgetAccount");
                });

            modelBuilder.Entity("Budget.Domain.Entities.BudgetAccount", b =>
                {
                    b.Navigation("MoneyFlows");

                    b.Navigation("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
